[
    {
        "id": "a98cfac94961e7b8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4c5a3de0604453d8",
        "type": "ui_tab",
        "name": "Overview",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2ee7c41f5ac956b2",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "58f3ebd5cf053194",
        "type": "ui_group",
        "name": "Site UI",
        "tab": "4c5a3de0604453d8",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4d5e8c652d7c3637",
        "type": "ui_group",
        "name": "Default",
        "tab": "4c5a3de0604453d8",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0e6fd72ca99e6c65",
        "type": "ui_template",
        "z": "a98cfac94961e7b8",
        "group": "4d5e8c652d7c3637",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div id=\"svgContainer\"\n    style=\"display: flex; justify-content: center; align-items: center; margin-top: 0; padding-top: 0;\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"850\" height=\"510\" viewBox=\"0 0 850 510\">\n\n        <!-- Screen Border -->\n        <rect x=\"10\" y=\"10\" width=\"830\" height=\"490\" fill=\"none\" stroke=\"#000\" stroke-width=\"1\" />\n\n        <!-- Grid Line -->\n        <line x1=\"60\" y1=\"30\" x2=\"60\" y2=\"450\" stroke=\"#000\" stroke-width=\"2\" stroke-dasharray=\"10,5\" />\n        <text x=\"50\" y=\"20\" font-size=\"12\" text-anchor=\"middle\" fill=\"#000\">GRID</text>\n\n        <!-- Site Connection Line -->\n        <line x1=\"60\" y1=\"430\" x2=\"790\" y2=\"430\" stroke=\"#000\" stroke-width=\"2\" />\n\n        <!-- Meter Object -->\n        <g id=\"electricMeter\" transform=\"translate(150,270)\">\n            <image\n                href=\"https://www.svgrepo.com/download/341478/electric-meter-electricity-technology-electronics-power.svg\"\n                x=\"-35\" y=\"0\" width=\"70\" height=\"70\" />\n        </g>\n        <text x=\"150\" y=\"260\" font-size=\"12\" fill=\"#000\" text-anchor=\"middle\">Power Meter</text>\n        <text id=\"powerMeterValue\" x=\"150\" y=\"460\" font-size=\"12\" fill=\"#000\" text-anchor=\"middle\">Power: -- kW</text>\n\n        <!-- Inverter Object -->\n        <g id=\"pidPowerInverter\" transform=\"translate(400,270)\">\n            <!-- Background rectangle -->\n            <rect x=\"0\" y=\"0\" width=\"70\" height=\"70\" fill=\"#f4ecce\" stroke=\"#838bc5\" stroke-width=\"3\" />\n            <line x1=\"0\" y1=\"70\" x2=\"70\" y2=\"0\" stroke=\"#838bc5\" stroke-width=\"2\" />\n            <path d=\"M10 20 C20 0, 40 0, 50 20 S70 40, 80 20\" stroke=\"#8f6c56\" stroke-width=\"1.5\" />\n        </g>\n        <text x=\"400\" y=\"260\" font-size=\"12\" fill=\"#000\" text-anchor=\"middle\">Solar Inverter</text>\n\n        <!-- Site Load Object -->\n        <g id=\"siteLoad\" transform=\"translate(650,270)\">\n            <rect x=\"0\" y=\"0\" width=\"70\" height=\"70\" fill=\"#f4ecce\" stroke=\"#838bc5\" stroke-width=\"3\" />\n        </g>\n        <text x=\"650\" y=\"260\" font-size=\"12\" fill=\"#000\" text-anchor=\"middle\">Site Load</text>\n        <text id=\"loadPowerValue\" x=\"650\" y=\"460\" font-size=\"12\" fill=\"#000\" text-anchor=\"middle\">Load Power: --\n            kW</text>\n\n        <!-- Irradiance Label -->\n        <text id=\"irradianceValue\" x=\"400\" y=\"40\" font-size=\"12\" fill=\"#000\" text-anchor=\"middle\">Irradiance: --\n            %</text>\n\n        <!-- Control Mode Label -->\n        <text id=\"controlModeValue\" x=\"400\" y=\"70\" font-size=\"12\" fill=\"#000\" text-anchor=\"middle\">Control Mode:\n            --</text>\n\n        <!-- PV Production and Limits -->\n        <text id=\"pvProductionValue\" x=\"400\" y=\"100\" font-size=\"12\" fill=\"#000\" text-anchor=\"middle\">PV Production: --\n            kW</text>\n        <text id=\"pvPLimitValue\" x=\"400\" y=\"130\" font-size=\"12\" fill=\"#000\" text-anchor=\"middle\">P Limit: -- %</text>\n        <text id=\"pvPLimitKWValue\" x=\"400\" y=\"160\" font-size=\"12\" fill=\"#000\" text-anchor=\"middle\">P Limit: -- kW</text>\n\n        <!-- Connections -->\n        <line x1=\"150\" y1=\"340\" x2=\"150\" y2=\"430\" stroke=\"#000\" stroke-width=\"2\" />\n        <line x1=\"400\" y1=\"340\" x2=\"400\" y2=\"430\" stroke=\"#000\" stroke-width=\"2\" />\n        <line x1=\"650\" y1=\"340\" x2=\"650\" y2=\"430\" stroke=\"#000\" stroke-width=\"2\" />\n\n    </svg>\n</div>\n\n<style>\n    #svgContainer {\n        margin: 0 auto;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    .name {\n        font-size: 12px;\n        font-family: Arial;\n        text-anchor: start;\n    }\n</style>\n\n<script>\n    (function(scope) {\n        const svgNS = \"http://www.w3.org/2000/svg\";\n\n        scope.updatePowerMeter = function(powerValue) {\n            const powerMeterText = document.getElementById('powerMeterValue');\n            if (powerMeterText) {\n                powerMeterText.textContent = `Power: ${powerValue} kW`;\n            }\n        };\n\n        scope.updateLoadPower = function(loadPowerValue) {\n            const loadPowerText = document.getElementById('loadPowerValue');\n            if (loadPowerText) {\n                loadPowerText.textContent = `Load Power: ${loadPowerValue} kW`;\n            }\n        };\n\n        scope.updateIrradiance = function(irradianceValue) {\n            const irradianceText = document.getElementById('irradianceValue');\n            if (irradianceText) {\n                irradianceText.textContent = `Irradiance: ${irradianceValue} %`;\n            }\n        };\n\n        scope.updateControlMode = function(controlModeValue) {\n            const controlModeText = document.getElementById('controlModeValue');\n            if (controlModeText) {\n                controlModeText.textContent = `Control Mode: ${controlModeValue}`;\n            }\n        };\n\n        scope.updatePVProduction = function(pvProductionValue) {\n            const pvProductionText = document.getElementById('pvProductionValue');\n            if (pvProductionText) {\n                pvProductionText.textContent = `PV Production: ${pvProductionValue} kW`;\n            }\n        };\n\n        scope.updatePVPLimit = function(pvPLimitValue) {\n            const pvPLimitText = document.getElementById('pvPLimitValue');\n            if (pvPLimitText) {\n                pvPLimitText.textContent = `P Limit: ${pvPLimitValue} %`;\n            }\n        };\n\n        scope.updatePVPLimitKW = function(pvPLimitKWValue) {\n            const pvPLimitKWText = document.getElementById('pvPLimitKWValue');\n            if (pvPLimitKWText) {\n                pvPLimitKWText.textContent = `P Limit: ${pvPLimitKWValue} kW`;\n            }\n        };\n\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic) {\n                switch (msg.topic) {\n                    case 'meter/power':\n                        scope.updatePowerMeter(msg.payload);\n                        break;\n                    case 'site/load_power':\n                        scope.updateLoadPower(msg.payload);\n                        break;\n                    case 'site/irradiance':\n                        scope.updateIrradiance(msg.payload);\n                        break;\n                    case 'site/control_mode':\n                        scope.updateControlMode(msg.payload);\n                        break;\n                    case 'pv/production_kW':\n                        scope.updatePVProduction(msg.payload);\n                        break;\n                    case 'pv/p_limit':\n                        scope.updatePVPLimit(msg.payload);\n                        break;\n                    case 'pv/p_limit_kW':\n                        scope.updatePVPLimitKW(msg.payload);\n                        break;\n                }\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 740,
        "y": 1320,
        "wires": [
            []
        ]
    }
]